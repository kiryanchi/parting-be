version: "3.7"

services:
  nginx:
    container_name: nginx
    image: nginx
    ports:
      - "80:80"
      - "443:443"
    environment:
      TZ: Asia/Seoul
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - /etc/letsencrypt:/etc/letsencrypt
      - /var/log/nginx:/var/log/nginx
    depends_on:
      - spring_dev
      - spring_prod
    networks:
      - dev_network
      - prod_network

##### dev
  mysql_dev:
    container_name: mysql_dev
    image: mysql:8.0.31
    expose:
      - ${MYSQL_PORT}
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./${DB_VOLUMES_PATH}_dev:/var/lib/mysql
    networks:
      - dev_network

  spring_dev:
    container_name: spring_dev
    build:
      context: ./
      dockerfile: Dockerfile
    expose:
      - 8080
    environment:
      MODE: dev
    depends_on:
      - mysql_dev
    restart: always
    networks:
      - dev_network

##### prod
  mysql_prod:
    container_name: mysql_prod
    image: mysql:8.0.31
    expose:
      - ${MYSQL_PORT}
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ./${DB_VOLUMES_PATH}_prod:/var/lib/mysql
    networks:
      - prod_network

  spring_prod:
    container_name: spring_prod
    build:
      context: ./
      dockerfile: Dockerfile
    expose:
      - 8080
    environment:
      MODE: prod
    depends_on:
      - mysql_prod
    restart: always
    networks:
      - prod_network

networks:
  dev_network:
    driver: bridge
  prod_network:
    driver: bridge
